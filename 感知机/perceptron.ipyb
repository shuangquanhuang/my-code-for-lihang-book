{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 感知机\n",
    "\n",
    "相当于一个只有一个神经元的神经网络"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x11dd4d7b8>]"
      ]
     },
     "execution_count": 120,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "w = np.random.rand(2, 1)\n",
    "x = np.random.rand(20, 1)\n",
    "x = np.c_[x, np.ones_like(x)]\n",
    "y = x.dot(w) + np.random.randn(20, 1)/10\n",
    "\n",
    "# 生成随机可线性二分的两组点\n",
    "colors = np.sign(y-x.dot(w))\n",
    "plt.scatter(x[:, 0], y, c=colors)\n",
    "\n",
    "x0 = np.linspace(0, 1, 10)\n",
    "x0 = np.c_[x0, np.ones_like(x0)]\n",
    "y0 = x0.dot(w)\n",
    "plt.plot(x0[:, 0], y0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x11ddc80b8>"
      ]
     },
     "execution_count": 121,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "X = np.c_[x[:, 0], y, np.ones_like(y)]\n",
    "Y = colors\n",
    "W = np.random.rand(3, 1)\n",
    "# 计算感知机的参数\n",
    "for epcho in range(1000):\n",
    "    i = np.random.choice(len(X))\n",
    "    x0 = X[i].reshape(1, -1)\n",
    "    y0 = np.asscalar(Y[i])\n",
    "#     if y0 > 0 and np.asscalar(x0.dot(W)) < 0:\n",
    "#         W += x0.T\n",
    "#     elif y0 < 0 and np.asscalar(x0.dot(W)) >= 0:\n",
    "#         W -= x0.T\n",
    "    if y0 * np.asscalar(x0.dot(W)) < 0:\n",
    "        W += y0 * x0.T\n",
    "        \n",
    "x0 = np.linspace(0, 1, 10)\n",
    "y0 = [(-W[2]-W[0]*v)/W[1] for v in x0]\n",
    "plt.plot(x0, y0)\n",
    "\n",
    "plt.scatter(X[:, 0], X[:,1], c=np.sign(X.dot(W)).flatten())\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**平均感知器算法**\n",
    "\n",
    "如果训练数据是线性可分的，那么感知器可以找到一个判别 函数来分割不同类的数据。如果间隔 γ 越大，收敛越快。但是感知器并不能保证 找到的判别函数是最优的(比如泛化能力高)，这样可能导致过拟合。\n",
    "\n",
    "感知器的学习到的权重向量和训练样本的顺序相关。在迭代次序上排在后 面的错误样本，比前面的错误样本对最终的权重向量影响更大。比如有 1, 000 个 训练样本，在迭代 100 个样本后，感知器已经学习到一个很好的权重向量。在接 下来的 899 个样本上都预测正确，也没有更新权重向量。但是在最后第 1, 000 个 样本时预测错误，并更新了权重。这次更新可能反而使得权重向量变差。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x11de8b2b0>"
      ]
     },
     "execution_count": 122,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "W = np.random.rand(3, 1)\n",
    "U = np.random.rand(3, 1)\n",
    "# 计算感知机的参数\n",
    "c = 1\n",
    "for epcho in range(1000):\n",
    "    i = np.random.choice(len(X))\n",
    "    x0 = X[i].reshape(1, -1)\n",
    "    y0 = np.asscalar(Y[i])\n",
    "#     if y0 > 0 and np.asscalar(x0.dot(W)) < 0:\n",
    "#         W += x0.T\n",
    "#     elif y0 < 0 and np.asscalar(x0.dot(W)) >= 0:\n",
    "#         W -= x0.T\n",
    "    if y0 * np.asscalar(x0.dot(W)) < 0:\n",
    "        W += y0 * x0.T\n",
    "        U += c * y0 * x0.T\n",
    "    c += 1\n",
    "W -= 1.0/c * U        \n",
    "x0 = np.linspace(0, 1, 10)\n",
    "y0 = [(-W[2]-W[0]*v)/W[1] for v in x0]\n",
    "plt.plot(x0, y0)\n",
    "\n",
    "plt.scatter(X[:, 0], X[:,1], c=np.sign(X.dot(W)).flatten())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "使用核函数"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x11d7067b8>"
      ]
     },
     "execution_count": 106,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# 生成随机二分类点\n",
    "import math\n",
    "center = np.random.rand(2)\n",
    "# math.sqrt(2)\n",
    "size = 50\n",
    "d = np.random.randn(size) / 50\n",
    "points = []\n",
    "for r0 in [0.3, 0.7]:\n",
    "    for i in range(size):\n",
    "        r = r0 + d[i]\n",
    "        theta = np.random.rand() * 2 * np.pi\n",
    "        x = center[0] + r * np.cos(theta)\n",
    "        y = center[1] + r * np.sin(theta)\n",
    "        points.append([x, y])\n",
    "\n",
    "points = np.array(points)\n",
    "colors = [1] * size + [0] * size\n",
    "plt.scatter(points[:, 0], points[:, 1], c=colors)\n",
    "\n",
    "plt.scatter([center[0]], center[1], c='r')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x11d81fd30>"
      ]
     },
     "execution_count": 112,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "X = np.c_[points, np.ones(len(points))]\n",
    "X = np.concatenate([X, X**2], axis=1)\n",
    "y = np.array([-1] * size + [1] * size).reshape(-1, 1)\n",
    "\n",
    "W = np.random.rand(X.shape[1], 1)\n",
    "\n",
    "\n",
    "for epcho in range(1000):\n",
    "    i = np.random.choice(len(X))\n",
    "    x0 = X[i].reshape(1, -1)\n",
    "    y0 = np.asscalar(y[i])\n",
    "    if y0 * np.asscalar(x0.dot(W)) < 0:\n",
    "        W += y0 * x0.T\n",
    "\n",
    "pred = np.sign(X.dot(W))\n",
    "\n",
    "plt.scatter(points[:, 0], points[:, 1], c=pred.flatten())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "多分类问题"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 185,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.87\n",
      "0.87\n"
     ]
    }
   ],
   "source": [
    "from sklearn.datasets import make_classification\n",
    "from sklearn.preprocessing import OneHotEncoder\n",
    "from sklearn.utils import shuffle\n",
    "from sklearn.metrics import accuracy_score\n",
    "N = 100\n",
    "X, y = make_classification(n_samples=N, n_features=5, n_informative=3, n_classes=3)\n",
    "encoder = OneHotEncoder(categories='auto', sparse=False)\n",
    "encoder.fit_transform(y0.reshape(-1, 1))\n",
    "\n",
    "W = np.random.rand(5, 3)\n",
    "W2 = W.copy()\n",
    "for epoch in range(1000):\n",
    "    X, y = shuffle(X, y)\n",
    "    for i in range(N):\n",
    "        xi, yi = X[i].reshape(-1, 1), y[i]\n",
    "        yhat = np.argmax(W.T.dot(xi).flatten())\n",
    "        if yhat != yi:\n",
    "            ya, yb = [encoder.transform(np.array([v]).reshape(-1, 1)) for v in [yi, yhat]]\n",
    "            W2[:, yi] = W2[:, yi] + xi.flatten()\n",
    "            W2[:, yhat] = W2[:, yhat] - xi.flatten()\n",
    "            W = W + xi.dot(ya-yb) # W += xi.dot(ya-yb) will not work\n",
    "\n",
    "pred = X.dot(W)\n",
    "pred2 = X.dot(W2)\n",
    "\n",
    "print(accuracy_score(encoder.inverse_transform(pred), y))\n",
    "print(accuracy_score(encoder.inverse_transform(pred2), y))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 175,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1.0\n"
     ]
    }
   ],
   "source": [
    "from sklearn.ensemble import RandomForestClassifier\n",
    "model = RandomForestClassifier(n_estimators=100)\n",
    "model.fit(X, y)\n",
    "\n",
    "print(accuracy_score(model.predict(X), y))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
